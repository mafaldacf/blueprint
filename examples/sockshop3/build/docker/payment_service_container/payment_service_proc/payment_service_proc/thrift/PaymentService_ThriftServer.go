// Blueprint: Auto-generated by Thrift Plugin

package thrift

import (
	"context"
	"github.com/apache/thrift/lib/go/thrift"
	"blueprint/goproc/payment_service_proc/thrift/paymentservice"
	"github.com/blueprint-uservices/blueprint/examples/sockshop3/workflow/sockshop3"
)

type PaymentService_ThriftServerHandler struct {
	Service sockshop3.PaymentService
	Address string
}

func New_PaymentService_ThriftServerHandler(ctx context.Context, service sockshop3.PaymentService, serverAddress string) (*PaymentService_ThriftServerHandler, error) {
	handler := &PaymentService_ThriftServerHandler{}
	handler.Service = service
	handler.Address = serverAddress
	return handler, nil
}

// Blueprint: Run is automatically called in a separate goroutine by runtime/plugins/golang/di.go
func (handler *PaymentService_ThriftServerHandler) Run(ctx context.Context) error {
	var protocolFactory thrift.TProtocolFactory
	protocolFactory = thrift.NewTBinaryProtocolFactory(true, true)
	var transportFactory thrift.TTransportFactory
	transportFactory = thrift.NewTTransportFactory()
	var transport thrift.TServerTransport
	var err error
	transport, err = thrift.NewTServerSocket(handler.Address)
	if err != nil {
		return err
	}
	processor := paymentservice.NewPaymentServiceProcessor(handler)
	server := thrift.NewTSimpleServer4(processor, transport, transportFactory, protocolFactory)

	go func() {
		select {
		case <-ctx.Done():
			server.Stop()
		}
	}()

	return server.Serve()
}


func (handler *PaymentService_ThriftServerHandler) Authorise(ctx context.Context, req *paymentservice.PaymentService_Authorise_Request) (*paymentservice.PaymentService_Authorise_Response, error) {
	amount := unmarshall_Authorise_req(req)
	ret0, err := handler.Service.Authorise(ctx, amount)
	if err != nil {
		return nil, err
	}
	rsp := &paymentservice.PaymentService_Authorise_Response{}
	marshall_Authorise_rsp(rsp, ret0)
	return rsp, nil
}

