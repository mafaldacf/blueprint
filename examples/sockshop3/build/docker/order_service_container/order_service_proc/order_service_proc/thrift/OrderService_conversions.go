// Blueprint: Auto-generated by Thrift Plugin marshallgen.go
package thrift

import (
	"github.com/blueprint-uservices/blueprint/examples/sockshop3/workflow/sockshop3"
	"blueprint/goproc/order_service_proc/thrift/orderservice"
)


// Client-side function to pack OrderService.GetOrder args into a Thrift orderservice.OrderService_GetOrder_Request struct
func marshall_GetOrder_req(msg *orderservice.OrderService_GetOrder_Request, orderID string) *orderservice.OrderService_GetOrder_Request {
	msg.OrderID = string(orderID)
	return msg
}

// Server-side function to unpack OrderService.GetOrder args from a Thrift OrderService_GetOrder_Request struct
func unmarshall_GetOrder_req(msg *orderservice.OrderService_GetOrder_Request) (orderID string) {
	orderID = string(msg.OrderID)
	return
}

// Server-side function to pack OrderService.GetOrder retvals into a Thrift orderservice.OrderService_GetOrder_Response struct
func marshall_GetOrder_rsp(msg *orderservice.OrderService_GetOrder_Response, ret0 sockshop3.Order) *orderservice.OrderService_GetOrder_Response {
	msg.Ret0 = marshall_orderservice_Order(new(orderservice.Order), &ret0)
	return msg
}

// Client-side function to unpack OrderService.GetOrder retvals from a Thrift OrderService_GetOrder_Response struct
func unmarshall_GetOrder_rsp(msg *orderservice.OrderService_GetOrder_Response) (ret0 sockshop3.Order) {
	unmarshall_orderservice_Order(msg.Ret0,&ret0)
	return
}

// Client-side function to pack OrderService.GetOrders args into a Thrift orderservice.OrderService_GetOrders_Request struct
func marshall_GetOrders_req(msg *orderservice.OrderService_GetOrders_Request, customerID string) *orderservice.OrderService_GetOrders_Request {
	msg.CustomerID = string(customerID)
	return msg
}

// Server-side function to unpack OrderService.GetOrders args from a Thrift OrderService_GetOrders_Request struct
func unmarshall_GetOrders_req(msg *orderservice.OrderService_GetOrders_Request) (customerID string) {
	customerID = string(msg.CustomerID)
	return
}

// Server-side function to pack OrderService.GetOrders retvals into a Thrift orderservice.OrderService_GetOrders_Response struct
func marshall_GetOrders_rsp(msg *orderservice.OrderService_GetOrders_Response, ret0 []sockshop3.Order) *orderservice.OrderService_GetOrders_Response {
	for _, v := range ret0 { msg.Ret0 = append(msg.Ret0, marshall_orderservice_Order(new(orderservice.Order), &v)) }
	return msg
}

// Client-side function to unpack OrderService.GetOrders retvals from a Thrift OrderService_GetOrders_Response struct
func unmarshall_GetOrders_rsp(msg *orderservice.OrderService_GetOrders_Response) (ret0 []sockshop3.Order) {
	
	ret0 = make([]sockshop3.Order, len(msg.Ret0))
	for i, v := range msg.Ret0 {
		unmarshall_orderservice_Order(v, &ret0[i])
	}
	return
}

// Client-side function to pack OrderService.NewOrder args into a Thrift orderservice.OrderService_NewOrder_Request struct
func marshall_NewOrder_req(msg *orderservice.OrderService_NewOrder_Request, customerID string, addressID string, cardID string, cartID string) *orderservice.OrderService_NewOrder_Request {
	msg.CustomerID = string(customerID)
	msg.AddressID = string(addressID)
	msg.CardID = string(cardID)
	msg.CartID = string(cartID)
	return msg
}

// Server-side function to unpack OrderService.NewOrder args from a Thrift OrderService_NewOrder_Request struct
func unmarshall_NewOrder_req(msg *orderservice.OrderService_NewOrder_Request) (customerID string, addressID string, cardID string, cartID string) {
	customerID = string(msg.CustomerID)
	addressID = string(msg.AddressID)
	cardID = string(msg.CardID)
	cartID = string(msg.CartID)
	return
}

// Server-side function to pack OrderService.NewOrder retvals into a Thrift orderservice.OrderService_NewOrder_Response struct
func marshall_NewOrder_rsp(msg *orderservice.OrderService_NewOrder_Response, ret0 sockshop3.Order) *orderservice.OrderService_NewOrder_Response {
	msg.Ret0 = marshall_orderservice_Order(new(orderservice.Order), &ret0)
	return msg
}

// Client-side function to unpack OrderService.NewOrder retvals from a Thrift OrderService_NewOrder_Response struct
func unmarshall_NewOrder_rsp(msg *orderservice.OrderService_NewOrder_Response) (ret0 sockshop3.Order) {
	unmarshall_orderservice_Order(msg.Ret0,&ret0)
	return
}



// Utility function to pack sockshop3.Address into a Thrift Address struct
func marshall_orderservice_Address(msg *orderservice.Address, obj *sockshop3.Address) *orderservice.Address {
	msg.Street = string(obj.Street)
	msg.Number = string(obj.Number)
	msg.Country = string(obj.Country)
	msg.City = string(obj.City)
	msg.PostCode = string(obj.PostCode)
	msg.ID = string(obj.ID)
	return msg
}

// Utility function to unpack sockshop3.Address from a Thrift Address struct
func unmarshall_orderservice_Address(msg *orderservice.Address, obj *sockshop3.Address) {
	obj.Street = string(msg.Street)
	obj.Number = string(msg.Number)
	obj.Country = string(msg.Country)
	obj.City = string(msg.City)
	obj.PostCode = string(msg.PostCode)
	obj.ID = string(msg.ID)
}

// Utility function to pack sockshop3.Card into a Thrift Card struct
func marshall_orderservice_Card(msg *orderservice.Card, obj *sockshop3.Card) *orderservice.Card {
	msg.LongNum = string(obj.LongNum)
	msg.Expires = string(obj.Expires)
	msg.CCV = string(obj.CCV)
	msg.ID = string(obj.ID)
	return msg
}

// Utility function to unpack sockshop3.Card from a Thrift Card struct
func unmarshall_orderservice_Card(msg *orderservice.Card, obj *sockshop3.Card) {
	obj.LongNum = string(msg.LongNum)
	obj.Expires = string(msg.Expires)
	obj.CCV = string(msg.CCV)
	obj.ID = string(msg.ID)
}

// Utility function to pack sockshop3.Item into a Thrift Item struct
func marshall_orderservice_Item(msg *orderservice.Item, obj *sockshop3.Item) *orderservice.Item {
	msg.ID = string(obj.ID)
	msg.Quantity = int32(obj.Quantity)
	msg.UnitPrice = double(obj.UnitPrice)
	return msg
}

// Utility function to unpack sockshop3.Item from a Thrift Item struct
func unmarshall_orderservice_Item(msg *orderservice.Item, obj *sockshop3.Item) {
	obj.ID = string(msg.ID)
	obj.Quantity = int(msg.Quantity)
	obj.UnitPrice = float32(msg.UnitPrice)
}

// Utility function to pack sockshop3.Order into a Thrift Order struct
func marshall_orderservice_Order(msg *orderservice.Order, obj *sockshop3.Order) *orderservice.Order {
	msg.ID = string(obj.ID)
	msg.CustomerID = string(obj.CustomerID)
	msg.Customer = marshall_orderservice_User(new(orderservice.User), &obj.Customer)
	msg.Address = marshall_orderservice_Address(new(orderservice.Address), &obj.Address)
	msg.Card = marshall_orderservice_Card(new(orderservice.Card), &obj.Card)
	for _, v := range obj.Items { msg.Items = append(msg.Items, marshall_orderservice_Item(new(orderservice.Item), &v)) }
	msg.Shipment = marshall_orderservice_Shipment(new(orderservice.Shipment), &obj.Shipment)
	msg.Date = string(obj.Date)
	msg.Total = double(obj.Total)
	return msg
}

// Utility function to unpack sockshop3.Order from a Thrift Order struct
func unmarshall_orderservice_Order(msg *orderservice.Order, obj *sockshop3.Order) {
	obj.ID = string(msg.ID)
	obj.CustomerID = string(msg.CustomerID)
	unmarshall_orderservice_User(msg.Customer,&obj.Customer)
	unmarshall_orderservice_Address(msg.Address,&obj.Address)
	unmarshall_orderservice_Card(msg.Card,&obj.Card)
	
	obj.Items = make([]sockshop3.Item, len(msg.Items))
	for i, v := range msg.Items {
		unmarshall_orderservice_Item(v, &obj.Items[i])
	}
	unmarshall_orderservice_Shipment(msg.Shipment,&obj.Shipment)
	obj.Date = string(msg.Date)
	obj.Total = float32(msg.Total)
}

// Utility function to pack sockshop3.Shipment into a Thrift Shipment struct
func marshall_orderservice_Shipment(msg *orderservice.Shipment, obj *sockshop3.Shipment) *orderservice.Shipment {
	msg.ID = string(obj.ID)
	msg.Name = string(obj.Name)
	msg.Status = string(obj.Status)
	return msg
}

// Utility function to unpack sockshop3.Shipment from a Thrift Shipment struct
func unmarshall_orderservice_Shipment(msg *orderservice.Shipment, obj *sockshop3.Shipment) {
	obj.ID = string(msg.ID)
	obj.Name = string(msg.Name)
	obj.Status = string(msg.Status)
}

// Utility function to pack sockshop3.User into a Thrift User struct
func marshall_orderservice_User(msg *orderservice.User, obj *sockshop3.User) *orderservice.User {
	msg.FirstName = string(obj.FirstName)
	msg.LastName = string(obj.LastName)
	msg.Email = string(obj.Email)
	msg.Username = string(obj.Username)
	msg.Password = string(obj.Password)
	msg.Addresses = marshall_orderservice_Address(new(orderservice.Address), &obj.Addresses)
	msg.Cards = marshall_orderservice_Card(new(orderservice.Card), &obj.Cards)
	msg.UserID = string(obj.UserID)
	msg.Salt = string(obj.Salt)
	return msg
}

// Utility function to unpack sockshop3.User from a Thrift User struct
func unmarshall_orderservice_User(msg *orderservice.User, obj *sockshop3.User) {
	obj.FirstName = string(msg.FirstName)
	obj.LastName = string(msg.LastName)
	obj.Email = string(msg.Email)
	obj.Username = string(msg.Username)
	obj.Password = string(msg.Password)
	unmarshall_orderservice_Address(msg.Addresses,&obj.Addresses)
	unmarshall_orderservice_Card(msg.Cards,&obj.Cards)
	obj.UserID = string(msg.UserID)
	obj.Salt = string(msg.Salt)
}

