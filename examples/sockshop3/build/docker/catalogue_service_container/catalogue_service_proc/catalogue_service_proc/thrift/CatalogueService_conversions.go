// Blueprint: Auto-generated by Thrift Plugin marshallgen.go
package thrift

import (
	"github.com/blueprint-uservices/blueprint/examples/sockshop3/workflow/sockshop3"
	"blueprint/goproc/catalogue_service_proc/thrift/catalogueservice"
)


// Client-side function to pack CatalogueService.AddSock args into a Thrift catalogueservice.CatalogueService_AddSock_Request struct
func marshall_AddSock_req(msg *catalogueservice.CatalogueService_AddSock_Request, sock sockshop3.Sock) *catalogueservice.CatalogueService_AddSock_Request {
	msg.Sock = marshall_catalogueservice_Sock(new(catalogueservice.Sock), &sock)
	return msg
}

// Server-side function to unpack CatalogueService.AddSock args from a Thrift CatalogueService_AddSock_Request struct
func unmarshall_AddSock_req(msg *catalogueservice.CatalogueService_AddSock_Request) (sock sockshop3.Sock) {
	unmarshall_catalogueservice_Sock(msg.Sock,&sock)
	return
}

// Server-side function to pack CatalogueService.AddSock retvals into a Thrift catalogueservice.CatalogueService_AddSock_Response struct
func marshall_AddSock_rsp(msg *catalogueservice.CatalogueService_AddSock_Response, ret0 string) *catalogueservice.CatalogueService_AddSock_Response {
	msg.Ret0 = string(ret0)
	return msg
}

// Client-side function to unpack CatalogueService.AddSock retvals from a Thrift CatalogueService_AddSock_Response struct
func unmarshall_AddSock_rsp(msg *catalogueservice.CatalogueService_AddSock_Response) (ret0 string) {
	ret0 = string(msg.Ret0)
	return
}

// Client-side function to pack CatalogueService.AddTags args into a Thrift catalogueservice.CatalogueService_AddTags_Request struct
func marshall_AddTags_req(msg *catalogueservice.CatalogueService_AddTags_Request, tags []string) *catalogueservice.CatalogueService_AddTags_Request {
	msg.Tags = tags
	return msg
}

// Server-side function to unpack CatalogueService.AddTags args from a Thrift CatalogueService_AddTags_Request struct
func unmarshall_AddTags_req(msg *catalogueservice.CatalogueService_AddTags_Request) (tags []string) {
	tags = msg.Tags
	return
}

// Server-side function to pack CatalogueService.AddTags retvals into a Thrift catalogueservice.CatalogueService_AddTags_Response struct
func marshall_AddTags_rsp(msg *catalogueservice.CatalogueService_AddTags_Response) *catalogueservice.CatalogueService_AddTags_Response {
	return msg
}

// Client-side function to unpack CatalogueService.AddTags retvals from a Thrift CatalogueService_AddTags_Response struct
func unmarshall_AddTags_rsp(msg *catalogueservice.CatalogueService_AddTags_Response) () {
	return
}

// Client-side function to pack CatalogueService.Count args into a Thrift catalogueservice.CatalogueService_Count_Request struct
func marshall_Count_req(msg *catalogueservice.CatalogueService_Count_Request, tags []string) *catalogueservice.CatalogueService_Count_Request {
	msg.Tags = tags
	return msg
}

// Server-side function to unpack CatalogueService.Count args from a Thrift CatalogueService_Count_Request struct
func unmarshall_Count_req(msg *catalogueservice.CatalogueService_Count_Request) (tags []string) {
	tags = msg.Tags
	return
}

// Server-side function to pack CatalogueService.Count retvals into a Thrift catalogueservice.CatalogueService_Count_Response struct
func marshall_Count_rsp(msg *catalogueservice.CatalogueService_Count_Response, ret0 int) *catalogueservice.CatalogueService_Count_Response {
	msg.Ret0 = int32(ret0)
	return msg
}

// Client-side function to unpack CatalogueService.Count retvals from a Thrift CatalogueService_Count_Response struct
func unmarshall_Count_rsp(msg *catalogueservice.CatalogueService_Count_Response) (ret0 int) {
	ret0 = int(msg.Ret0)
	return
}

// Client-side function to pack CatalogueService.DeleteSock args into a Thrift catalogueservice.CatalogueService_DeleteSock_Request struct
func marshall_DeleteSock_req(msg *catalogueservice.CatalogueService_DeleteSock_Request, id string) *catalogueservice.CatalogueService_DeleteSock_Request {
	msg.Id = string(id)
	return msg
}

// Server-side function to unpack CatalogueService.DeleteSock args from a Thrift CatalogueService_DeleteSock_Request struct
func unmarshall_DeleteSock_req(msg *catalogueservice.CatalogueService_DeleteSock_Request) (id string) {
	id = string(msg.Id)
	return
}

// Server-side function to pack CatalogueService.DeleteSock retvals into a Thrift catalogueservice.CatalogueService_DeleteSock_Response struct
func marshall_DeleteSock_rsp(msg *catalogueservice.CatalogueService_DeleteSock_Response) *catalogueservice.CatalogueService_DeleteSock_Response {
	return msg
}

// Client-side function to unpack CatalogueService.DeleteSock retvals from a Thrift CatalogueService_DeleteSock_Response struct
func unmarshall_DeleteSock_rsp(msg *catalogueservice.CatalogueService_DeleteSock_Response) () {
	return
}

// Client-side function to pack CatalogueService.Get args into a Thrift catalogueservice.CatalogueService_Get_Request struct
func marshall_Get_req(msg *catalogueservice.CatalogueService_Get_Request, id string) *catalogueservice.CatalogueService_Get_Request {
	msg.Id = string(id)
	return msg
}

// Server-side function to unpack CatalogueService.Get args from a Thrift CatalogueService_Get_Request struct
func unmarshall_Get_req(msg *catalogueservice.CatalogueService_Get_Request) (id string) {
	id = string(msg.Id)
	return
}

// Server-side function to pack CatalogueService.Get retvals into a Thrift catalogueservice.CatalogueService_Get_Response struct
func marshall_Get_rsp(msg *catalogueservice.CatalogueService_Get_Response, ret0 sockshop3.Sock) *catalogueservice.CatalogueService_Get_Response {
	msg.Ret0 = marshall_catalogueservice_Sock(new(catalogueservice.Sock), &ret0)
	return msg
}

// Client-side function to unpack CatalogueService.Get retvals from a Thrift CatalogueService_Get_Response struct
func unmarshall_Get_rsp(msg *catalogueservice.CatalogueService_Get_Response) (ret0 sockshop3.Sock) {
	unmarshall_catalogueservice_Sock(msg.Ret0,&ret0)
	return
}

// Client-side function to pack CatalogueService.List args into a Thrift catalogueservice.CatalogueService_List_Request struct
func marshall_List_req(msg *catalogueservice.CatalogueService_List_Request, tags []string, order string, pageNum int, pageSize int) *catalogueservice.CatalogueService_List_Request {
	msg.Tags = tags
	msg.Order = string(order)
	msg.PageNum = int32(pageNum)
	msg.PageSize = int32(pageSize)
	return msg
}

// Server-side function to unpack CatalogueService.List args from a Thrift CatalogueService_List_Request struct
func unmarshall_List_req(msg *catalogueservice.CatalogueService_List_Request) (tags []string, order string, pageNum int, pageSize int) {
	tags = msg.Tags
	order = string(msg.Order)
	pageNum = int(msg.PageNum)
	pageSize = int(msg.PageSize)
	return
}

// Server-side function to pack CatalogueService.List retvals into a Thrift catalogueservice.CatalogueService_List_Response struct
func marshall_List_rsp(msg *catalogueservice.CatalogueService_List_Response, ret0 []sockshop3.Sock) *catalogueservice.CatalogueService_List_Response {
	for _, v := range ret0 { msg.Ret0 = append(msg.Ret0, marshall_catalogueservice_Sock(new(catalogueservice.Sock), &v)) }
	return msg
}

// Client-side function to unpack CatalogueService.List retvals from a Thrift CatalogueService_List_Response struct
func unmarshall_List_rsp(msg *catalogueservice.CatalogueService_List_Response) (ret0 []sockshop3.Sock) {
	
	ret0 = make([]sockshop3.Sock, len(msg.Ret0))
	for i, v := range msg.Ret0 {
		unmarshall_catalogueservice_Sock(v, &ret0[i])
	}
	return
}

// Client-side function to pack CatalogueService.Tags args into a Thrift catalogueservice.CatalogueService_Tags_Request struct
func marshall_Tags_req(msg *catalogueservice.CatalogueService_Tags_Request) *catalogueservice.CatalogueService_Tags_Request {
	return msg
}

// Server-side function to unpack CatalogueService.Tags args from a Thrift CatalogueService_Tags_Request struct
func unmarshall_Tags_req(msg *catalogueservice.CatalogueService_Tags_Request) () {
	return
}

// Server-side function to pack CatalogueService.Tags retvals into a Thrift catalogueservice.CatalogueService_Tags_Response struct
func marshall_Tags_rsp(msg *catalogueservice.CatalogueService_Tags_Response, ret0 []string) *catalogueservice.CatalogueService_Tags_Response {
	msg.Ret0 = ret0
	return msg
}

// Client-side function to unpack CatalogueService.Tags retvals from a Thrift CatalogueService_Tags_Response struct
func unmarshall_Tags_rsp(msg *catalogueservice.CatalogueService_Tags_Response) (ret0 []string) {
	ret0 = msg.Ret0
	return
}



// Utility function to pack sockshop3.Sock into a Thrift Sock struct
func marshall_catalogueservice_Sock(msg *catalogueservice.Sock, obj *sockshop3.Sock) *catalogueservice.Sock {
	msg.ID = string(obj.ID)
	msg.Name = string(obj.Name)
	msg.Description = string(obj.Description)
	msg.ImageURL = obj.ImageURL
	msg.ImageURL_1 = string(obj.ImageURL_1)
	msg.ImageURL_2 = string(obj.ImageURL_2)
	msg.Price = double(obj.Price)
	msg.Quantity = int32(obj.Quantity)
	msg.Tags = obj.Tags
	msg.TagString = string(obj.TagString)
	return msg
}

// Utility function to unpack sockshop3.Sock from a Thrift Sock struct
func unmarshall_catalogueservice_Sock(msg *catalogueservice.Sock, obj *sockshop3.Sock) {
	obj.ID = string(msg.ID)
	obj.Name = string(msg.Name)
	obj.Description = string(msg.Description)
	obj.ImageURL = msg.ImageURL
	obj.ImageURL_1 = string(msg.ImageURL_1)
	obj.ImageURL_2 = string(msg.ImageURL_2)
	obj.Price = float32(msg.Price)
	obj.Quantity = int(msg.Quantity)
	obj.Tags = msg.Tags
	obj.TagString = string(msg.TagString)
}

